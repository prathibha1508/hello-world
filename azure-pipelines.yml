# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
trigger: none

pool: 'self-hosted-machine'

variables:
- name: MAVEN_CACHE_FOLDER
  value: $(Pipeline.Workspace)/.m2/repository
- name: MAVEN_OPTS
  value: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'

steps:
- task: CmdLine@2
  inputs:
    script: |
      dir
      git 
      git -v
      mvn -version
      java -version
- task: Maven@3
  displayName: 'Build JAR File'
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    mavenAuthenticateFeed: true
    publishJUnitResults: false
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    effectivePomSkip: true
    sonarQubeRunAnalysis: false
    goals: 'clean install package -DskipTests'
# - task: Maven@3
#   inputs:
#     mavenPomFile: 'pom.xml'
#     mavenOptions: '-Xmx3072m'
#     javaHomeOption: 'JDKVersion'
#     jdkVersionOption: '1.8'
#     jdkArchitectureOption: 'x64'
#     publishJUnitResults: true
#     testResultsFiles: '**/surefire-reports/TEST-*.xml'
#     goals: 'package'
- task: CopyFiles@2
  inputs:
    Contents: '$(Build.SourcesDirectory)/target/*.jar' 
    TargetFolder: $(Build.ArtifactStagingDirectory)
    CleanTargetFolder: true
    flattenFolders: true
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: $(Build.ArtifactStagingDirectory)
    ArtifactName: 'BuildArtifacts'
    publishLocation: Container 
